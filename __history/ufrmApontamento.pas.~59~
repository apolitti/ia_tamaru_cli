unit ufrmApontamento;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Data.DB, Datasnap.DBClient, Vcl.Grids,
  Vcl.DBGrids, System.JSON, IPPeerClient, REST.Client,
  REST.Authenticator.Simple, Data.Bind.Components, Data.Bind.ObjectScope,
  REST.Response.Adapter, Datasnap.DSClientRest, REST.Authenticator.Basic,
  Vcl.ExtCtrls, JvExExtCtrls, JvExtComponent, JvPanel, JvExForms, JvScrollBox,
  JvExControls, JvLabel, DBXJSON, DBXJSONReflect, Vcl.DBCGrids, Vcl.StdCtrls,
  Vcl.Mask, Vcl.DBCtrls, Vcl.ComCtrls;

type
  TfrmApontamento = class(TForm)
    GroupBox1: TGroupBox;
    Label7: TLabel;
    edOPD_ST_ALTERNATIVO: TEdit;
    edOPD_ST_DESCRICAO: TEdit;
    Label1: TLabel;
    Label2: TLabel;
    edORD_IN_CODIGO: TEdit;
    Label3: TLabel;
    edPRO_IN_CODIGO: TEdit;
    edPRO_ST_DESCRICAO: TEdit;
    Label4: TLabel;
    Label5: TLabel;
    edOPR_IN_CODIGO: TEdit;
    Label6: TLabel;
    edOPR_ST_OPERACAO: TEdit;
    GroupBox2: TGroupBox;
    Label8: TLabel;
    Label9: TLabel;
    edPRO_ST_ALTERNATIVO: TEdit;
    edORD_ST_ALTERNATIVO: TEdit;
    Label10: TLabel;
    Label11: TLabel;
    edORD_DT_RECEBIMENTO: TEdit;
    Label12: TLabel;
    edPLF_IN_SQOPERACAO: TEdit;
    cdsApontamentos: TClientDataSet;
    dsApontamentos: TDataSource;
    gdApontamentos: TDBGrid;
    procedure edOPD_ST_ALTERNATIVOExit(Sender: TObject);
    procedure edORD_IN_CODIGOExit(Sender: TObject);
    procedure edPLF_IN_SQOPERACAOExit(Sender: TObject);
  private
    procedure CarregaApontamentos;
    { Private declarations }
  public

  end;

var
  frmApontamento: TfrmApontamento;

implementation

{$R *.dfm}

uses uDM;

procedure TfrmApontamento.edOPD_ST_ALTERNATIVOExit(Sender: TObject);
var
  cds : TClientDataSet;
  vParams : TStringStream;
begin

  edOPD_ST_DESCRICAO.Text := '';

  if edOPD_ST_ALTERNATIVO.Text = '' then
    Exit;

  vParams := TStringStream.Create;
  vParams.WriteString('"<parametros>');
  vParams.WriteString('<evento>p_operador_lst</evento>');
  vParams.WriteString('<org_in_codigo>' + IntToStr(wORG_IN_CODIGO) + '</org_in_codigo>');
  vParams.WriteString('<opd_st_alternativo>' + edOPD_ST_ALTERNATIVO.Text + ' </opd_st_alternativo>');
  vParams.WriteString('</parametros>"');

  cds := TClientDataSet.Create(Self);
  cds := DM.f_evento_lst(vParams);

  if cds.IsEmpty then
    Exit;

  edOPD_ST_DESCRICAO.Text := cds.FieldByName('OPD_ST_DESCRICAO').AsString;

  CarregaApontamentos();

end;

procedure TfrmApontamento.edORD_IN_CODIGOExit(Sender: TObject);
var
  cds : TClientDataSet;
  vParams : TStringStream;
begin

  edPRO_IN_CODIGO.Text := '';
  edPRO_ST_DESCRICAO.Text := '';
  edPRO_ST_ALTERNATIVO.Text := '';
  edORD_DT_RECEBIMENTO.Text := '';
  edORD_ST_ALTERNATIVO.Text := '';

  if edORD_IN_CODIGO.Text = '' then
    Exit;

  vParams := TStringStream.Create;
  vParams.WriteString('"<parametros>');
  vParams.WriteString('<evento>p_ordem_lst</evento>');
  vParams.WriteString('<org_in_codigo>' + IntToStr(wORG_IN_CODIGO) + '</org_in_codigo>');
  vParams.WriteString('<ord_in_codigo>' + edORD_IN_CODIGO.Text + ' </ord_in_codigo>');
  vParams.WriteString('</parametros>"');

  cds := TClientDataSet.Create(Self);
  cds := DM.f_evento_lst(vParams);

  if cds.IsEmpty then
    Exit;

  edPRO_IN_CODIGO.Text := cds.FieldByName('PRO_IN_CODIGO').AsString;
  edPRO_ST_DESCRICAO.Text := cds.FieldByName('PRO_ST_DESCRICAO').AsString;
  edPRO_ST_ALTERNATIVO.Text := cds.FieldByName('PRO_ST_ALTERNATIVO').AsString;
  edORD_DT_RECEBIMENTO.Text := cds.FieldByName('ORD_DT_RECEBIMENTO').AsString;
  edORD_ST_ALTERNATIVO.Text := cds.FieldByName('ORD_ST_ALTERNATIVO').AsString;


end;

procedure TfrmApontamento.edPLF_IN_SQOPERACAOExit(Sender: TObject);
var
  cds : TClientDataSet;
  vParams : TStringStream;
begin

  edOPR_IN_CODIGO.Text := '';
  edOPR_ST_OPERACAO.Text := '';

  if edPLF_IN_SQOPERACAO.Text = '' then
    Exit;

  vParams := TStringStream.Create;
  vParams.WriteString('"<parametros>');
  vParams.WriteString('<evento>P_OPERACAO_LST</evento>');
  vParams.WriteString('<org_in_codigo>' + IntToStr(wORG_IN_CODIGO) + '</org_in_codigo>');
  vParams.WriteString('<PLF_IN_SQOPERACAO>' + edPLF_IN_SQOPERACAO.Text + ' </PLF_IN_SQOPERACAO>');
  vParams.WriteString('</parametros>"');

  cds := TClientDataSet.Create(Self);
  cds := DM.f_evento_lst(vParams);

  if cds.IsEmpty then
    Exit;

  edOPR_IN_CODIGO.Text := cds.FieldByName('OPR_IN_CODIGO').AsString;
  edOPR_ST_OPERACAO.Text := cds.FieldByName('OPR_ST_OPERACAO').AsString;

end;

procedure TfrmApontamento.CarregaApontamentos;
var
  vParams : TStringStream;
begin

  if edOPD_ST_ALTERNATIVO.Text = '' then
    Exit;

  if edORD_IN_CODIGO.Text = '' then
    Exit;

  if edPLF_IN_SQOPERACAO.Text = '' then
    Exit;

  vParams := TStringStream.Create;
  vParams.WriteString('"<PARAMETROS>');
  vParams.WriteString('<EVENTO>P_APONTAMENTO_LST</EVENTO>');
  vParams.WriteString('<ORG_IN_CODIGO>' + IntToStr(wORG_IN_CODIGO) + '</ORG_IN_CODIGO>');
  vParams.WriteString('</PARAMETROS>"');

  cdsApontamentos := DM.f_evento_lst(vParams);
  cdsApontamentos.Last;
  cdsApontamentos.First;
  dsApontamentos.DataSet = cdsApontamentos;
  gdApontamentos.DataSource := dsApontamentos;

end;

end.
